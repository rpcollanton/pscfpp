/*! \page install_overview_page 2.3 Installation Overview

\ref install_source_page (Prev)       &nbsp; &nbsp; &nbsp; &nbsp;
\ref install_environment_page (Next)
<BR>

Below is a brief overview of instructions for compiling all of the PSCF
programs using default settings. The directions given here and in
subsequent pages assume that you have already cloned the pscfpp repository 
and installed all required dependencies, and that the root directory of 
the repository is named pscfpp/.

Instructions:

   - **Set environment variables:**
     Modify the users PATH and PYTHONPATH unix environment variables,
     as discussed \ref install_environment_page "here".

   - **Navigate to root directory:**
     Change directory (cd) to the pscfpp/ root directory.

   - **Setup:**
     Invoke the "setup" script from the pscfpp/ root directory.  Enter
     the command
     \code
     > ./setup
     \endcode
     to setup the build system with default compiler options. Alternatively,
     invoke the setup script with a filename argument that is the name of a 
     compiler configuration file that contains non-default compiler options, 
     as discussed \ref install_setup_page "here").

   - **Compile all cpu programs:**
     From the pscfpp/ directory, enter
     \code
     > make all-cpu
     \endcode
     If successful, this will install executables named "pscf_fd",
     "pscf_pc1d", "pscf_pc2d" and "pscf_pc3d" in the pscfpp/bin directory.

   - **Compile GPU accelerated programs:**
     To compile the GPU accelerated executables on a machine with an
     appropriate NVIDIA GPU and a CUDA compiler, invoke
     \code
     > make pspg
     \endcode
     from within the pscfpp/ root directory.  If successful, this will
     install executables named "pscf_pg1d", "pscf_pg2d" and "pscf_pg3d"
     in the pscfpp/bin directory.


The "make all-cpu" and "make pspg" commands will each also create a large
number of intermediate object (*.o), dependency (*.d) and library (*.a)
files in subdirectories of the pscfpp/bld directory (the default build
directory).

Each of the above steps is discussed in more detail in the following pages.

The above instructions perform an "out-of-source" build in which intermediate
files created during compilation process are left in the pscfpp/bld directory
tree. It is also possible to perform an "in-source" in which these files are
created in the pscfpp/src directory that also contains the C++ and CUDA
source files. The option of in-source compilation is discussed in more detail
\ref install_inout_page "here".  We recommend out-of-source compilation for
package users who are not actively working on development.

<BR>
\ref install_source_page (Prev) &nbsp; &nbsp; &nbsp; &nbsp;
\ref install_page (Up)          &nbsp; &nbsp; &nbsp; &nbsp;
\ref install_environment_page (Next)

*/
