/*! \page user_usage_page 3.1 Running a Program

\ref user_files_page (Prev) &nbsp; &nbsp; &nbsp; &nbsp; 
\ref user_param_page (Next) 
<BR>

<h3> Command Line Interface </h3>

All of the pscf programs are designed to be run from a unix command line, 
and all have a similar command line interface. The names of the parameter 
and command files required to perform a PSCF computation are passed to the 
the program as arguments of the "-p" and "-c" command line options, 
respectively.  Names of other required input files are provided as 
arguments to commands in the command file.

As an example, consider use of the program pscf_pc3d, which is used to 
model three-dimensional periodic microstructures.  To run this program 
using a parameter file named "param" and command file named "commands" 
that are both in the current working directory, one would enter:
\code
   pscf_pc3d -p param -c commands
\endcode
Analogous command line options are used to invoke any other PSCF program.

During execution, some log information is written to standard output, which
outputs to a terminal by default. This log output can be re-directed to a 
file by using the unix ">" output redirect operator. For example, the 
command
\code
  pscf_pc3d -p param -c commands > log
\endcode
would direct standard output to a file named "log" in the current working
directory.  Standard output should normally be redirected to a file when 
a job is run in background or in a queue. 

<h3> Echoing the Parameter File </h3>

All pscf programs accept a command line option "-e" that causes the 
contents of each line of the parameter file to be echoed to standard 
output as the parameter file is being read. For example, to invoke 
the program pscf_pc3d with echoing of the parameter file to a log file, 
one could enter
\code
   pscf_pc3d -e -p param -c commands > log
\endcode
This option is very useful for locating errors in the parameter file.
When an error is detected while reading a parameter file, the echoed 
output ends immediately before the line at which the error is detected, 
and is followed by an error message that explains what the program 
knows about the nature of the error. The parameter file is a fixed
format file in which every element is preceded by a label string that 
the program compares to an expected label. Error messages generated in 
response to errors in a parameter file usually output both the expected
label string and the string that was read from file. This is usually 
enough to allow a user to identify the source of trouble.

<h3> Command Line Options </h3>

All pscf programs can be invoked with any of the following command line 
options:
<ul>
  <li> -e: Activates echoing of the parameter file to standard output.</li>
  <li> -p filename: Specifies the name of a parameter file </li>
  <li> -c filename: Specifies the name of a command file </li>
  <li> -i filename: Specifies a prefix string for input data files </li>
  <li> -o filename: Specifies a prefix string for output data files </li>
  </li>
</ul>
The -p and -c options are required, while others are optional.

The -e (echo) option causes each parameter in the parameter file to be echoed to standard output immediately after it is read. This option takes no arguments.

The -p (parameter) option takes a required string parameter, which is the name of a parameter file.  

The -c (command) option takes a required string parameter, which is the name of a command file. 

The -i (input prefix) option takes a required string parameter, which is a prefix that will be prepended to the names (i.e., paths) for all input data files. 

The -o (output prefix) option takes a required string parameter, which is a prefix that will be prepended to the names (paths) for all output data files. 


<BR>
\ref user_files_page (Prev) &nbsp; &nbsp; &nbsp; &nbsp; 
\ref user_page (Up) &nbsp; &nbsp; &nbsp; &nbsp; 
\ref user_param_page (Next) 

*/
